/* Base Color */
/* Subtle Color Scheme */
/* Complementary Color Scheme */
/* FONT FACE */
/* TEXT SHADOW */
/* TRANSFORM  */
/* TRANSITION */
/* FLEX */
/* FLIP */
@font-face {
  font-family: ZapfinoOne-One;
  src: url("../fonts/ZapfinoOne.eot");
  src: url("../fonts/ZapfinoOne.eot?#iefix") format("embedded-opentype"), url("../fonts/ZapfinoOne.woff") format("woff"), url("../fonts/ZapfinoOne.ttf") format("truetype"), url("../fonts/ZapfinoOne.svg#ZapfinoOne-One") format("svg");
  font-weight: 400;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: ZapfinoOne-One;
    src: url("../fonts/ZapfinoOne.svg#ZapfinoOne-One") format("svg"); } }

@font-face {
  font-family: Karma-Regular;
  src: url("../fonts/Karma-Regular.eot");
  src: url("../fonts/Karma-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Karma-Regular.woff") format("woff"), url("../fonts/Karma-Regular.ttf") format("truetype"), url("../fonts/Karma-Regular.svg#Karma-Regular") format("svg");
  font-weight: 400;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: Karma-Regular;
    src: url("../fonts/Karma-Regular.svg#Karma-Regular") format("svg"); } }

@font-face {
  font-family: Karma-Regular;
  src: url("../fonts/Karma-Regular.eot");
  src: url("../fonts/Karma-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Karma-Regular.woff") format("woff"), url("../fonts/Karma-Regular.ttf") format("truetype"), url("../fonts/Karma-Regular.svg#Karma-Regular") format("svg");
  font-weight: 400;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: Karma-Regular;
    src: url("../fonts/Karma-Regular.svg#Karma-Regular") format("svg"); } }

@font-face {
  font-family: Roboto-Thin;
  src: url("../fonts/Roboto-Thin.eot");
  src: url("../fonts/Roboto-Thin.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Thin.woff") format("woff"), url("../fonts/Roboto-Thin.ttf") format("truetype"), url("../fonts/Roboto-Thin.svg#Roboto-Thin") format("svg");
  font-weight: 400;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: Roboto-Thin;
    src: url("../fonts/Roboto-Thin.svg#Roboto-Thin") format("svg"); } }

@font-face {
  font-family: OpenSans-Light;
  src: url("../fonts/OpenSans-Light.eot");
  src: url("../fonts/OpenSans-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/OpenSans-Light.woff") format("woff"), url("../fonts/OpenSans-Light.ttf") format("truetype"), url("../fonts/OpenSans-Light.svg#OpenSans-Light") format("svg");
  font-weight: 400;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: OpenSans-Light;
    src: url("../fonts/OpenSans-Light.svg#OpenSans-Light") format("svg"); } }

*,
*:after,
*:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

body {
  font-family: 'Roboto-Thin', arial, sans-serif; }

.pure-g [class*='pure-u'] {
  line-height: 1.2;
  padding: 1em;
  color: #959595;
  font-family: 'Karma-Regular', arial, sans-serif; }
  .pure-g [class*='pure-u'] p {
    margin: 0; }

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #252525;
  font-family: 'Roboto-Thin', arial, sans-serif; }

h1 {
  text-transform: uppercase; }

a {
  font-weight: bold;
  text-decoration: none;
  letter-spacing: -1px;
  color: #dba123; }
  a:hover {
    color: #d67972; }

.container {
  margin: 2em auto; }
  @media (min-width: 768px) {
    .container {
      width: 95%; } }
  @media (min-width: 1140px) {
    .container {
      width: 80%; } }

.header .pure-menu-heading {
  font-size: 22px;
  text-transform: none;
  color: #000;
  font-family: 'Zapfino', arial, sans-serif; }

.header .pure-menu li a,
.header .pure-menu li a:visited,
.header .pure-menu li a:link {
  padding: auto;
  color: #252525; }

.header .pure-menu li a:hover {
  color: #fff;
  background: #dba123; }

.main-content {
  height: 400px; }

.grid-example div {
  border: 1px solid white;
  background: #dba123; }

.grid-example p {
  text-align: center;
  color: white; }

.ir {
  background-color: transparent;
  border: 0;
  overflow: hidden;
  *text-indent: -9999px; }

.ir:before {
  content: "";
  display: block;
  width: 0;
  height: 150%; }

.hidden {
  display: none !important;
  visibility: hidden; }

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

.invisible {
  visibility: hidden; }

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table; }

.clearfix:after {
  clear: both; }

.clearfix {
  *zoom: 1; }

#media-query-indicator {
  position: fixed;
  padding: 2px;
  opacity: 0.8;
  font-size: 8px; }

@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links for images, or javascript/internal links
     */
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group;
    /* h5bp.com/t */ }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  @page {
    margin: 0.5cm; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

/*# sourceMappingURL=data:application/json;base64, */
